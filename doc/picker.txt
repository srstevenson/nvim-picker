*picker.txt* A fuzzy picker for Neovim and Vim                            *picker*

==============================================================================
CONTENTS                                                       *picker-contents*

    1. About .....................................|picker-about|
    2. Commands ..................................|picker-commands|
    3. Mappings ..................................|picker-mappings|
    4. Configuration .............................|picker-configuration|
    5. Issues ....................................|picker-issues|
    6. Licence ...................................|picker-licence|

==============================================================================
ABOUT                                                             *picker-about*

vim-picker is a fuzzy file, buffer, and tag picker for Neovim and Vim.

==============================================================================
COMMANDS                                                       *picker-commands*

vim-picker provides the following commands:

                                                            *picker-:PickerEdit*
:PickerEdit             Pick a file to edit in the current window.

                                                           *picker-:PickerSplit*
:PickerSplit            Pick a file to edit in a new horizontal split.

                                                         *picker-:PickerTabedit*
:PickerTabedit          Pick a file to edit in a new tab.

                                                          *picker-:PickerVsplit*
:PickerVsplit           Pick a file to edit in a new vertical split.

                                                          *picker-:PickerBuffer*
:PickerBuffer           Pick a buffer to edit in the curent window.

                                                             *picker-:PickerTag*
:PickerTag              Pick a tag to jump to in the current window.

                                                            *picker-:PickerStag*
:PickerStag             Pick a tag to jump to in a new horizontal split.

                                                       *picker-:PickerBufferTag*
:PickerBufferTag        Pick a tag from the current buffer to jump to.

                                                            *picker-:PickerHelp*
:PickerHelp             Pick a help tag to jump to in the current window.

==============================================================================
MAPPINGS                                                       *picker-mappings*

vim-picker provides the following |<Plug>| mappings:

<Plug>PickerEdit        Execute :PickerEdit
<Plug>PickerSplit       Execute :PickerSplit
<Plug>PickerTabedit     Execute :PickerTabedit
<Plug>PickerVsplit      Execute :PickerVsplit
<Plug>PickerBuffer      Execute :PickerBuffer
<Plug>PickerTag         Execute :PickerTag
<Plug>PickerStag        Execute :PickerStag
<Plug>PickerBufferTag   Execute :PickerBufferTag
<Plug>PickerHelp        Execute :PickerHelp

==============================================================================
CONFIGURATION                                             *picker-configuration*

In directories which are not inside a Git repository, vim-picker will use `fd`
(https://github.com/sharkdp/fd) to list files, falling back to `find` if `fd`
is not available. To use an alternative to `fd`, set `g:picker_find_executable`
and `g:picker_find_flags` in your |vimrc|. For example, to use ripgrep
(https://github.com/BurntSushi/ripgrep) set:
>
    let g:picker_find_executable = 'rg'
    let g:picker_find_flags = '--color never --files'
<
By default vim-picker will use `fzy` (https://github.com/jhawthorn/fzy) as the
fuzzy selector. You can change this by setting `g:picker_selector_executable`
and `g:picker_selector_flags` in your |vimrc|. For example, to use `pick`
(https://github.com/mptre/pick) set:
>
    let g:picker_selector_executable = 'pick'
    let g:picker_selector_flags = ''
<
By default, vim-picker will run the fuzzy selector in a full width split at
the bottom of the window, using |:botright|. You can change this by setting
`g:picker_split` in your |vimrc|. For example, to open a full width split at
the top of the window, set:
>
    let g:picker_split = 'topleft'
<
See |opening-window| for other valid values.

To specify the height of the window in which the fuzzy selector is opened, set
`g:picker_height` in your |vimrc|. The default is 10 lines:
>
    let g:picker_height = 10
<

==============================================================================
ISSUES                                                           *picker-issues*

Bug reports and patches are welcome on the issue tracker at
https://github.com/srstevenson/vim-picker/issues

==============================================================================
LICENCE                                                         *picker-licence*

Copyright Â© 2016-2018 Scott Stevenson.

vim-picker is distributed under the terms of the ISC licence.

==============================================================================
vim:et:ft=help:sts=4:tw=78:
